-- For this project, I downloaded Spotify data from Kaggle.

-- I created a table to insert Spotify data into.
-- Next, I performed analytics on the data using SQL. 

-- Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- With my table set up, I inserted the Spotify Data .csv into the table.

-- Next, I explored the data using the following SQL. 

-- First I chose to preview the dataset and look it over

select * from bit_db.SpotifyData;

-- Next I counted the amount of artists on the dataset

select sum(artist_name) from bit_db.Spotifydata;

-- I determined the average energy, loudness, tempo, instrumentalmess, dance ability of the top 10 most popular tracks

select artist_name, track_name, avg(energy),avg(loudness),avg(tempo), avg(instrumentalness), avg(danceability), avg(popularity) from bit_db.Spotifydata
group by artist_name, track_name
order by popularity desc
limit 10;

-- Here I calculated the average popularity of the top 10 most popular artists on the chart

with popularity_average_CTE AS ( select s.artist_name, avg(s.popularity) as average_popularity
from SpotifyData s 
group by s.artist_name
)
 
select  artist_name, average_popularity, 'Top Star' as tag
from popularity_average_CTE
where average_popularity>=90
order by average_popularity desc;
